/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.edd1;

import java.awt.CardLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Leonardo Borjas
 */
public class ProyectoEdD1 extends javax.swing.JFrame {

    /**
     * Creates new form ProyectoEdD1
     */
    public ProyectoEdD1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        Laberinto = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        Evaluacion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Empresa = new javax.swing.JTree();
        empresa_jefe = new javax.swing.JButton();
        nombre_jefe = new javax.swing.JTextField();
        empresa_empleado = new javax.swing.JButton();
        nombre_empleado = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        Expresiones = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TFrespuesta = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        siete = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        DEL = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        multiplicar = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        uno = new javax.swing.JButton();
        cero = new javax.swing.JButton();
        mas = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        dividir = new javax.swing.JButton();
        menos = new javax.swing.JButton();
        igual = new javax.swing.JButton();
        Compresiones = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea3 = new javax.swing.JTextArea();
        comprimir = new javax.swing.JButton();
        descomprimir = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        cargararchivo = new javax.swing.JButton();
        Bicoloreable = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Arbol = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Origenes = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Origen = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Main.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Main.setLayout(new java.awt.CardLayout());

        jLabel2.setText("Laberinto");

        jButton9.setText("Cargar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton9MouseReleased(evt);
            }
        });

        jButton10.setText("Resolver");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LaberintoLayout = new javax.swing.GroupLayout(Laberinto);
        Laberinto.setLayout(LaberintoLayout);
        LaberintoLayout.setHorizontalGroup(
            LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaberintoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(265, 265, 265))
            .addGroup(LaberintoLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(63, 63, 63))
        );
        LaberintoLayout.setVerticalGroup(
            LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaberintoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(23, 23, 23)
                .addGroup(LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addContainerGap(316, Short.MAX_VALUE))
        );

        Main.add(Laberinto, "Laberinto");

        jLabel3.setText("Evaluacion");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CEO");
        Empresa.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(Empresa);

        empresa_jefe.setText("Comenzar Empresa");
        empresa_jefe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                empresa_jefeMouseReleased(evt);
            }
        });

        empresa_empleado.setText("Agregar Empleado");
        empresa_empleado.setEnabled(false);
        empresa_empleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                empresa_empleadoMouseReleased(evt);
            }
        });

        nombre_empleado.setEnabled(false);

        jButton11.setText("jButton11");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EvaluacionLayout = new javax.swing.GroupLayout(Evaluacion);
        Evaluacion.setLayout(EvaluacionLayout);
        EvaluacionLayout.setHorizontalGroup(
            EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EvaluacionLayout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(EvaluacionLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EvaluacionLayout.createSequentialGroup()
                        .addGroup(EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(empresa_jefe, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(nombre_jefe)
                            .addComponent(empresa_empleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nombre_empleado))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EvaluacionLayout.createSequentialGroup()
                        .addComponent(jButton11)
                        .addGap(128, 128, 128))))
        );
        EvaluacionLayout.setVerticalGroup(
            EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EvaluacionLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addGroup(EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addGroup(EvaluacionLayout.createSequentialGroup()
                        .addComponent(empresa_jefe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre_jefe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(empresa_empleado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Main.add(Evaluacion, "Evaluacion");

        jLabel4.setText("Expresiones");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TFrespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFrespuestaActionPerformed(evt);
            }
        });

        jLabel10.setText("CASIO");

        siete.setText("7");
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });

        ocho.setText("8");
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });

        nueve.setText("9");
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });

        DEL.setText("DEL");
        DEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELActionPerformed(evt);
            }
        });

        cuatro.setText("4");
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });

        cinco.setText("5");
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        multiplicar.setText("x");
        multiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicarActionPerformed(evt);
            }
        });

        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        dos.setText("2");
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });

        uno.setText("1");
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });

        cero.setText("0");
        cero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceroActionPerformed(evt);
            }
        });

        mas.setText("+");
        mas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masActionPerformed(evt);
            }
        });

        decimal.setText(".");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });

        dividir.setText("÷");
        dividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dividirActionPerformed(evt);
            }
        });

        menos.setText("-");
        menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosActionPerformed(evt);
            }
        });

        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uno, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cinco, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(TFrespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(siete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ocho, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DEL))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(igual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dividir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(menos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DEL, cero, cinco, cuatro, decimal, dividir, dos, mas, menos, multiplicar, nueve, ocho, seis, siete, tres, uno});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(TFrespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(siete)
                    .addComponent(ocho)
                    .addComponent(nueve)
                    .addComponent(DEL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuatro)
                    .addComponent(cinco)
                    .addComponent(seis)
                    .addComponent(multiplicar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tres)
                    .addComponent(dos)
                    .addComponent(uno)
                    .addComponent(mas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cero)
                    .addComponent(decimal)
                    .addComponent(dividir)
                    .addComponent(menos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(igual)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ExpresionesLayout = new javax.swing.GroupLayout(Expresiones);
        Expresiones.setLayout(ExpresionesLayout);
        ExpresionesLayout.setHorizontalGroup(
            ExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpresionesLayout.createSequentialGroup()
                .addGroup(ExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExpresionesLayout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(jLabel4))
                    .addGroup(ExpresionesLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        ExpresionesLayout.setVerticalGroup(
            ExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpresionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        Main.add(Expresiones, "Expresiones");

        jLabel5.setText("Compresiones");

        textarea2.setColumns(20);
        textarea2.setRows(5);
        jScrollPane2.setViewportView(textarea2);

        textarea3.setColumns(20);
        textarea3.setRows(5);
        jScrollPane3.setViewportView(textarea3);

        comprimir.setText("Comprimir");
        comprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comprimirMouseReleased(evt);
            }
        });

        descomprimir.setText("Descomprimir");
        descomprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                descomprimirMouseReleased(evt);
            }
        });
        descomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descomprimirActionPerformed(evt);
            }
        });

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane4.setViewportView(textarea);

        cargararchivo.setText("Cargar Archivo");
        cargararchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cargararchivoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout CompresionesLayout = new javax.swing.GroupLayout(Compresiones);
        Compresiones.setLayout(CompresionesLayout);
        CompresionesLayout.setHorizontalGroup(
            CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompresionesLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(comprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(cargararchivo)
                .addGap(60, 60, 60)
                .addComponent(descomprimir)
                .addGap(87, 87, 87))
            .addGroup(CompresionesLayout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addGroup(CompresionesLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        CompresionesLayout.setVerticalGroup(
            CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(16, 16, 16)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                        .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descomprimir)
                            .addComponent(comprimir)
                            .addComponent(cargararchivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        Main.add(Compresiones, "Compresiones");

        jLabel6.setText("Bicoloreable");

        javax.swing.GroupLayout BicoloreableLayout = new javax.swing.GroupLayout(Bicoloreable);
        Bicoloreable.setLayout(BicoloreableLayout);
        BicoloreableLayout.setHorizontalGroup(
            BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BicoloreableLayout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jLabel6)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        BicoloreableLayout.setVerticalGroup(
            BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BicoloreableLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel6)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        Main.add(Bicoloreable, "Bicoloreable");

        jLabel7.setText("Arbol");

        javax.swing.GroupLayout ArbolLayout = new javax.swing.GroupLayout(Arbol);
        Arbol.setLayout(ArbolLayout);
        ArbolLayout.setHorizontalGroup(
            ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArbolLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jLabel7)
                .addContainerGap(323, Short.MAX_VALUE))
        );
        ArbolLayout.setVerticalGroup(
            ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArbolLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel7)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        Main.add(Arbol, "Arbol");

        jLabel8.setText("Origenes");

        javax.swing.GroupLayout OrigenesLayout = new javax.swing.GroupLayout(Origenes);
        Origenes.setLayout(OrigenesLayout);
        OrigenesLayout.setHorizontalGroup(
            OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenesLayout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jLabel8)
                .addContainerGap(280, Short.MAX_VALUE))
        );
        OrigenesLayout.setVerticalGroup(
            OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenesLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel8)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        Main.add(Origenes, "Origenes");

        jLabel9.setText("Origen");

        javax.swing.GroupLayout OrigenLayout = new javax.swing.GroupLayout(Origen);
        Origen.setLayout(OrigenLayout);
        OrigenLayout.setHorizontalGroup(
            OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel9)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        OrigenLayout.setVerticalGroup(
            OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel9)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        Main.add(Origen, "Origen");

        jButton1.setText("Laberinto Backtracking");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Evaluación por Desempeño");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Expresiones Matemáticas ");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.setVerifyInputWhenFocusTarget(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Compresión de Archivos");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setVerifyInputWhenFocusTarget(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Grafo Bi-Coloreable");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.setVerifyInputWhenFocusTarget(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Orígenes/Todos los Destinos");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.setVerifyInputWhenFocusTarget(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText(" Menor Costo:");

        jButton7.setText("Origen/Todos los Destinos");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton7.setVerifyInputWhenFocusTarget(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Árboles de Expansión Mínima");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton8.setVerifyInputWhenFocusTarget(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4, jButton5, jButton6, jButton7, jButton8});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Laberinto");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Compresiones");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Bicoloreable");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Origenes");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Origen");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Arbol");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Evaluacion");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Expresiones");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseReleased
        JFileChooser fc = new JFileChooser("./");
        fc.setDialogTitle("Seleccione un archivo con el laberinto.");
        FileNameExtensionFilter fe = new FileNameExtensionFilter("Archivo de texto. (.txt)", ".txt");
        fc.setFileFilter(fe);
        fc.showOpenDialog(null);
        f = fc.getSelectedFile();
    }//GEN-LAST:event_jButton9MouseReleased

    private void TFrespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFrespuestaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFrespuestaActionPerformed

    private void ceroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceroActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "0");
    }//GEN-LAST:event_ceroActionPerformed

    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "3");
    }//GEN-LAST:event_tresActionPerformed

    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "4");
    }//GEN-LAST:event_cuatroActionPerformed

    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sieteActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "7");
    }//GEN-LAST:event_sieteActionPerformed

    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ochoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "8");
    }//GEN-LAST:event_ochoActionPerformed

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "5");
    }//GEN-LAST:event_cincoActionPerformed

    private void dosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "2");
    }//GEN-LAST:event_dosActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + ".");
    }//GEN-LAST:event_decimalActionPerformed

    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nueveActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "9");
    }//GEN-LAST:event_nueveActionPerformed

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "6");
    }//GEN-LAST:event_seisActionPerformed

    private void unoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "1");
    }//GEN-LAST:event_unoActionPerformed

    private void dividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dividirActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "/");
    }//GEN-LAST:event_dividirActionPerformed

    private void multiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicarActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "*");
    }//GEN-LAST:event_multiplicarActionPerformed

    private void masActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "+");
    }//GEN-LAST:event_masActionPerformed

    private void menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menosActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "-");
    }//GEN-LAST:event_menosActionPerformed

    private void DELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELActionPerformed
        // TODO add your handling code here:
        if (TFrespuesta.getText().length() != 0) {
            TFrespuesta.setText(TFrespuesta.getText().substring(0, TFrespuesta.getText().length() - 1));
        }
    }//GEN-LAST:event_DELActionPerformed

    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        String problema = TFrespuesta.getText() + " ";
        if (TFrespuesta.getText().length() == 0) {

        } else {
            Arraylist numeros = new Arraylist();
            Arraylist operadores = new Arraylist();

            for (int i = 0; i < problema.length(); i++) {
                if (Character.getNumericValue(problema.charAt(i)) < 10 && Character.getNumericValue(problema.charAt(i)) >= 0) {
                    String num = "" + problema.charAt(i);
                    if (i + 1 != problema.length()) {

                        while (Character.getNumericValue(problema.charAt(i + 1)) < 10 && Character.getNumericValue(problema.charAt(i + 1)) >= 0) {
                            num += problema.charAt(i + 1);
                            i++;
                        }

                    }
                    numeros.append(Double.parseDouble(num));

                } else if (problema.charAt(i) == '*' || problema.charAt(i) == '/' || problema.charAt(i) == '+' || problema.charAt(i) == '-') {
                    operadores.append(problema.charAt(i));

                } else {
                    i = problema.length();
                }
            }

            for (int i = 0; i < numeros.getAvailpos(); i++) {
                if (operadores.get(i) == (Object) '*') {
                    numeros.set(i, ((double) numeros.get(i) * (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }

                if (operadores.get(i) == (Object) '/') {
                    numeros.set(i, ((double) numeros.get(i) / (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }
            }

            for (int i = 0; i < numeros.getAvailpos(); i++) {
                if (operadores.get(i) == (Object) '+') {
                    numeros.set(i, ((double) numeros.get(i) + (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }

                if (operadores.get(i) == (Object) '-') {
                    numeros.set(i, ((double) numeros.get(i) - (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }
            }
            TFrespuesta.setText("" + numeros.get(0));
        }
    }//GEN-LAST:event_igualActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (f != null) {
            char[][] laberinto = null;
            int x = 0;
            int y = 0;
            try {
                Scanner texto = new Scanner(f);
                while (texto.hasNext()) {
                    y++;
                    x = texto.nextLine().length();
                }
                texto.close();
                laberinto = new char[y][x];
                Scanner texto2 = new Scanner(f);
                for (int i = 0; i < y; i++) {
                    String linea = texto2.next();
                    for (int j = 0; j < x; j++) {
                        laberinto[i][j] = linea.charAt(j);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Prueba.class.getName()).log(Level.SEVERE, null, ex);
            }

            int[] coordenadas = entrada(laberinto);
            laberinto[coordenadas[0]][coordenadas[1]] = '+';
            LinkedStack backtracking = salida(laberinto, coordenadas[0], coordenadas[1]);
            while (!backtracking.isEmpty()) {
                Laberinto maze = (Laberinto) backtracking.pop();
                laberinto[maze.getX()][maze.getY()] = '@';
            }
            printMatriz(laberinto);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void empresa_jefeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empresa_jefeMouseReleased
        // TODO add your handling code here:
        if (nombre_jefe.getText().equals("")) {
            
        }else{
            Empresa.setModel(new DefaultTreeModel(new DefaultMutableTreeNode(new Empleado(nombre_jefe.getText()))));
            empresa_empleado.setEnabled(true);
            nombre_empleado.setEnabled(true);
            empresa_jefe.setText("Cambiar Jefe");
            raiz2 = new Treenode(new Empleado(nombre_jefe.getText()));
        }
    }//GEN-LAST:event_empresa_jefeMouseReleased

    private void empresa_empleadoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empresa_empleadoMouseReleased
        // TODO add your handling code here:
        if (Empresa.getLastSelectedPathComponent() == null) {
        }else{
            DefaultTreeModel m = (DefaultTreeModel) Empresa.getModel();
            DefaultMutableTreeNode n = (DefaultMutableTreeNode) m.getRoot();
            Empleado temp = new Empleado(nombre_empleado.getText());
            Empleado seleccion = (Empleado)((DefaultMutableTreeNode)Empresa.getLastSelectedPathComponent()).getUserObject();
            Treenode nodo = rec(raiz2, seleccion);
            nodo.AddChild(new Treenode(temp));

            n.removeAllChildren();
            llenar(raiz2,n);
            Empresa.setModel(m);
            m.reload((javax.swing.tree.TreeNode) m.getRoot());
        }
    }//GEN-LAST:event_empresa_empleadoMouseReleased

    public static void llenar(Treenode root, DefaultMutableTreeNode node){
        if (root.LeftChild()!=null) {
            node.add(new DefaultMutableTreeNode(root.LeftChild().getData()));
            llenar(root.LeftChild(), node.getFirstLeaf());
        }
        

        if (root.RightSibling()!=null) {
            ((DefaultMutableTreeNode)node.getParent()).add(new DefaultMutableTreeNode(root.RightSibling().getData()));
            llenar(root.RightSibling(), node.getNextSibling());
        }
    }
    
    public static Treenode rec(Treenode root, Empleado temp) {
        if ((Empleado)root.getData() == temp) {
            return root;
        }

        if (root.LeftChild() != null) {
            if ( (Empleado) rec(root.LeftChild(), temp).getData() == temp) {
                root = rec(root.LeftChild(), temp);
            }
        }
        if (root.RightSibling() != null) {
            if ((Empleado) rec(root.RightSibling(), temp).getData() == temp) {
                root = rec(root.RightSibling(), temp);
            }
        }
        return root;
    }
    


    private void comprimirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comprimirMouseReleased
        textarea2.setText(compression(textarea.getText()));
    }//GEN-LAST:event_comprimirMouseReleased

    private void descomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descomprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descomprimirActionPerformed

    private void descomprimirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descomprimirMouseReleased
        textarea3.setText(decompression(textarea2.getText()));
    }//GEN-LAST:event_descomprimirMouseReleased

    private void cargararchivoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargararchivoMouseReleased
        JFileChooser fc = new JFileChooser("./");
        fc.setDialogTitle("Seleccione un archivo a cargar.");
        FileNameExtensionFilter fe = new FileNameExtensionFilter("Archivo de texto. (.txt)", "txt");
        fc.setFileFilter(fe);
        fc.showOpenDialog(null);
        f = fc.getSelectedFile();
        if (f.isFile()) {
            try {
                Scanner file = new Scanner(f);
                String texto = "";
                while (file.hasNext()) {
                    texto += file.nextLine()+'\n';
                }
                textarea.setText(texto);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProyectoEdD1.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_cargararchivoMouseReleased

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode n = (DefaultMutableTreeNode)Empresa.getLastSelectedPathComponent();
        System.out.println(n.getChildCount());
        
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProyectoEdD1().setVisible(true);
            }
        });
    }

    public static int[] entrada(char[][] matriz) {
        int[] coordenadas = new int[2];
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[i].length; j++) {
                if (i == 0) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                } else if (i > 0 && i < matriz.length) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                } else if (i == matriz.length) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                }
            }
        }
        return coordenadas;
    }

    public static void printMatriz(char[][] laberinto) {
        for (int i = 0; i < laberinto.length; i++) {
            for (int j = 0; j < laberinto[1].length; j++) {
                System.out.print("[" + laberinto[i][j] + "]");
            }
            System.out.println();
        }
        System.out.println("");
    }

    public static LinkedStack salida(char[][] laberinto, int x, int y) {
        int size1 = laberinto.length;
        int size2 = laberinto[0].length;
        boolean salio = false;
        int cont = 0;
        LinkedStack stack = new LinkedStack();
        stack.push(new Laberinto(x, y));
        while (!salio) {
            cont = 0;
            printMatriz(laberinto);
            //ARRIBA
            if (x > 0 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX() - 1][((Laberinto) stack.top()).getY()] == '0' && !salio) {
                    x--;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //DERECHA
            if (y + 1 < size2 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX()][((Laberinto) stack.top()).getY() + 1] == '0' && !salio) {
                    y++;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //ABAJO
            if (x + 1 < size1 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX() + 1][((Laberinto) stack.top()).getY()] == '0' && !salio) {
                    x++;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //IZQUIERDA
            if (y > 0 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX()][((Laberinto) stack.top()).getY() - 1] == '0' && !salio) {
                    y--;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            if (cont == 0) {
                laberinto[x][y] = '+';
                stack.pop();
                Laberinto back = (Laberinto) stack.top();
                x = back.getX();
                y = back.getY();
            }

            if (x == size1 - 1 || x == 0 || y == size2 - 1 || y == 0) {
                salio = true;
            }
        }
        return stack;
    }

    public static String compression(String s) {
        String s2 = s;
        ArrayList<Binarynode> nodos = new ArrayList<>();
        while (s2.length() != 0) {
            int frequency = 1;
            for (int i = 1; i < s2.length(); i++) {
                if (s2.charAt(i) == s2.charAt(0)) {
                    frequency++;
                }
            }
            nodos.add(new Binarynode(s2.charAt(0), frequency));
            s2 = s2.replaceAll("" + s2.charAt(0), "");
        }
        Collections.sort(nodos, Binarynode.Comparador);
        while (nodos.size() != 1) {
            Binarynode temp = new Binarynode(null, nodos.get(0).getFrequency() + nodos.get(1).getFrequency());
            temp.AddLeftChild(nodos.get(0));
            temp.AddRightChild(nodos.get(1));
            nodos.add(temp);
            nodos.remove(0);
            nodos.remove(0);
            Collections.sort(nodos, Binarynode.Comparador);
        }
        raiz = nodos.get(0);
        String codigo = "";
        for (int i = 0; i < s.length(); i++) {
            Binarynode temp = rec(raiz, "" + s.charAt(i));
            String string = "";
            while (temp.parent != null) {
                if (temp.parent.lchild == temp) {
                    string += "0";
                } else {
                    string += "1";
                }
                temp = temp.parent;
            }
            for (int j = string.length() - 1; j >= 0; j--) {
                codigo += string.charAt(j);
            }
        }
        return codigo;
    }

    public static Binarynode rec(Binarynode root, String temp) {
        if (("" + root.getChar()).equals(temp)) {
            return root;
        }

        if (root.LeftChild() != null) {
            if (("" + rec(root.LeftChild(), temp).getChar()).equals(temp)) {
                root = rec(root.LeftChild(), temp);
            }
        }
        if (root.RightChild() != null) {
            if (("" + rec(root.RightChild(), temp).getChar()).equals(temp)) {
                root = rec(root.RightChild(), temp);
            }
        }
        return root;
    }

    public static String decompression(String s) {
        String descomprecion = "";
        Binarynode mapa = raiz;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '0') {
                mapa = mapa.lchild;
                if (mapa.getChar() != null) {
                    descomprecion += mapa.getChar();
                    mapa = raiz;
                }
            } else {
                mapa = mapa.rchild;
                if (mapa.getChar() != null) {
                    descomprecion += mapa.getChar();
                    mapa = raiz;
                }
            }
        }
        return descomprecion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Arbol;
    private javax.swing.JPanel Bicoloreable;
    private javax.swing.JPanel Compresiones;
    private javax.swing.JButton DEL;
    private javax.swing.JTree Empresa;
    private javax.swing.JPanel Evaluacion;
    private javax.swing.JPanel Expresiones;
    private javax.swing.JPanel Laberinto;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel Origen;
    private javax.swing.JPanel Origenes;
    private javax.swing.JTextField TFrespuesta;
    private javax.swing.JButton cargararchivo;
    private javax.swing.JButton cero;
    private javax.swing.JButton cinco;
    private javax.swing.JButton comprimir;
    private javax.swing.JButton cuatro;
    private javax.swing.JButton decimal;
    private javax.swing.JButton descomprimir;
    private javax.swing.JButton dividir;
    private javax.swing.JButton dos;
    private javax.swing.JButton empresa_empleado;
    private javax.swing.JButton empresa_jefe;
    private javax.swing.JButton igual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton mas;
    private javax.swing.JButton menos;
    private javax.swing.JButton multiplicar;
    private javax.swing.JTextField nombre_empleado;
    private javax.swing.JTextField nombre_jefe;
    private javax.swing.JButton nueve;
    private javax.swing.JButton ocho;
    private javax.swing.JButton seis;
    private javax.swing.JButton siete;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextArea textarea2;
    private javax.swing.JTextArea textarea3;
    private javax.swing.JButton tres;
    private javax.swing.JButton uno;
    // End of variables declaration//GEN-END:variables
    File f = null;
    static Scanner sc = new Scanner(System.in);
    static Binarynode raiz;
    static Treenode raiz2;
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.edd1;

import java.awt.CardLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.paint.Color;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.graphstream.graph.Edge;
import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.SingleGraph;
import org.graphstream.ui.view.Viewer;

/**
 *
 * @author Leonardo Borjas
 */
public class ProyectoEdD1 extends javax.swing.JFrame {

    /**
     * Creates new form ProyectoEdD1
     */
    public ProyectoEdD1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        Laberinto = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        laberintotext = new javax.swing.JTextArea();
        Evaluacion = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Empresa = new javax.swing.JTree();
        empresa_jefe = new javax.swing.JButton();
        nombre_jefe = new javax.swing.JTextField();
        empresa_empleado = new javax.swing.JButton();
        nombre_empleado = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        Expresiones = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TFrespuesta = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        siete = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        DEL = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        multiplicar = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        uno = new javax.swing.JButton();
        cero = new javax.swing.JButton();
        mas = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        dividir = new javax.swing.JButton();
        menos = new javax.swing.JButton();
        igual = new javax.swing.JButton();
        Compresiones = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea3 = new javax.swing.JTextArea();
        comprimir = new javax.swing.JButton();
        descomprimir = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        cargararchivo = new javax.swing.JButton();
        Bicoloreable = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        NodoBoton = new javax.swing.JButton();
        ViewerBoton = new javax.swing.JButton();
        AristaBoton = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        BicoloreableTf = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Listnodo = new javax.swing.JList<>();
        NombreId = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        Listnodo2 = new javax.swing.JList<>();
        Arbol = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        NodoBoton1 = new javax.swing.JButton();
        ViewerBoton1 = new javax.swing.JButton();
        AristaBoton1 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        Listnodo1 = new javax.swing.JList<>();
        NombreId1 = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        Listnodo3 = new javax.swing.JList<>();
        jSpinner1 = new javax.swing.JSpinner();
        Origenes = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        NodoBoton3 = new javax.swing.JButton();
        NombreId3 = new javax.swing.JTextField();
        AristaBoton3 = new javax.swing.JButton();
        jSpinner3 = new javax.swing.JSpinner();
        ViewerBoton3 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        NodeTable = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        Listnodo6 = new javax.swing.JList<>();
        jScrollPane14 = new javax.swing.JScrollPane();
        Listnodo7 = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        NodeTable1 = new javax.swing.JTable();
        Origen = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        NodoBoton2 = new javax.swing.JButton();
        NombreId2 = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        Listnodo4 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        Listnodo5 = new javax.swing.JList<>();
        AristaBoton2 = new javax.swing.JButton();
        jSpinner2 = new javax.swing.JSpinner();
        ViewerBoton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        ListaDijkstra = new javax.swing.JList<>();
        Kentucky = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Main.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Main.setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Laberinto Backtracking");

        jButton9.setText("Cargar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton9MouseReleased(evt);
            }
        });

        jButton10.setText("Resolver");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        laberintotext.setEditable(false);
        laberintotext.setColumns(20);
        laberintotext.setRows(5);
        jScrollPane5.setViewportView(laberintotext);

        javax.swing.GroupLayout LaberintoLayout = new javax.swing.GroupLayout(Laberinto);
        Laberinto.setLayout(LaberintoLayout);
        LaberintoLayout.setHorizontalGroup(
            LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaberintoLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(jButton10)
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LaberintoLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        LaberintoLayout.setVerticalGroup(
            LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaberintoLayout.createSequentialGroup()
                .addGroup(LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LaberintoLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(LaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(jButton10)))
                    .addGroup(LaberintoLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        Main.add(Laberinto, "Laberinto");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Evaluación por Desempeño");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CEO");
        Empresa.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(Empresa);

        empresa_jefe.setText("Comenzar Empresa");
        empresa_jefe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                empresa_jefeMouseReleased(evt);
            }
        });

        empresa_empleado.setText("Agregar Empleado");
        empresa_empleado.setEnabled(false);
        empresa_empleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                empresa_empleadoMouseReleased(evt);
            }
        });

        nombre_empleado.setEnabled(false);

        jButton11.setText("Hacer Evaluacion");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EvaluacionLayout = new javax.swing.GroupLayout(Evaluacion);
        Evaluacion.setLayout(EvaluacionLayout);
        EvaluacionLayout.setHorizontalGroup(
            EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EvaluacionLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empresa_jefe, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(nombre_jefe)
                    .addComponent(empresa_empleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombre_empleado)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EvaluacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(166, 166, 166))
        );
        EvaluacionLayout.setVerticalGroup(
            EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EvaluacionLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EvaluacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addGroup(EvaluacionLayout.createSequentialGroup()
                        .addComponent(empresa_jefe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre_jefe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(empresa_empleado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        Main.add(Evaluacion, "Evaluacion");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Expresiones Matemáticas");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TFrespuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFrespuestaActionPerformed(evt);
            }
        });

        jLabel10.setText("CASIO");

        siete.setText("7");
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });

        ocho.setText("8");
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });

        nueve.setText("9");
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });

        DEL.setText("DEL");
        DEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELActionPerformed(evt);
            }
        });

        cuatro.setText("4");
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });

        cinco.setText("5");
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        multiplicar.setText("x");
        multiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicarActionPerformed(evt);
            }
        });

        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        dos.setText("2");
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });

        uno.setText("1");
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });

        cero.setText("0");
        cero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceroActionPerformed(evt);
            }
        });

        mas.setText("+");
        mas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masActionPerformed(evt);
            }
        });

        decimal.setText(".");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });

        dividir.setText("÷");
        dividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dividirActionPerformed(evt);
            }
        });

        menos.setText("-");
        menos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosActionPerformed(evt);
            }
        });

        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tres, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uno, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cuatro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cinco, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(TFrespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(siete, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ocho, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nueve, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DEL))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(igual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(cero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dividir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(menos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DEL, cero, cinco, cuatro, decimal, dividir, dos, mas, menos, multiplicar, nueve, ocho, seis, siete, tres, uno});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(TFrespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(siete)
                    .addComponent(ocho)
                    .addComponent(nueve)
                    .addComponent(DEL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuatro)
                    .addComponent(cinco)
                    .addComponent(seis)
                    .addComponent(multiplicar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tres)
                    .addComponent(dos)
                    .addComponent(uno)
                    .addComponent(mas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cero)
                    .addComponent(decimal)
                    .addComponent(dividir)
                    .addComponent(menos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(igual)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ExpresionesLayout = new javax.swing.GroupLayout(Expresiones);
        Expresiones.setLayout(ExpresionesLayout);
        ExpresionesLayout.setHorizontalGroup(
            ExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpresionesLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExpresionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(173, 173, 173))
        );
        ExpresionesLayout.setVerticalGroup(
            ExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpresionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        Main.add(Expresiones, "Expresiones");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Compresión de Archivo");

        textarea2.setEditable(false);
        textarea2.setColumns(20);
        textarea2.setRows(5);
        jScrollPane2.setViewportView(textarea2);

        textarea3.setEditable(false);
        textarea3.setColumns(20);
        textarea3.setRows(5);
        jScrollPane3.setViewportView(textarea3);

        comprimir.setText("Comprimir");
        comprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comprimirMouseReleased(evt);
            }
        });

        descomprimir.setText("Descomprimir");
        descomprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                descomprimirMouseReleased(evt);
            }
        });
        descomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descomprimirActionPerformed(evt);
            }
        });

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane4.setViewportView(textarea);

        cargararchivo.setText("Cargar Archivo");
        cargararchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cargararchivoMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout CompresionesLayout = new javax.swing.GroupLayout(Compresiones);
        Compresiones.setLayout(CompresionesLayout);
        CompresionesLayout.setHorizontalGroup(
            CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompresionesLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(comprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cargararchivo)
                .addGap(58, 58, 58)
                .addComponent(descomprimir)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addGroup(CompresionesLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(183, 183, 183))
        );
        CompresionesLayout.setVerticalGroup(
            CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CompresionesLayout.createSequentialGroup()
                        .addGroup(CompresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descomprimir)
                            .addComponent(comprimir)
                            .addComponent(cargararchivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        Main.add(Compresiones, "Compresiones");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Grafo Bicoloreable");

        NodoBoton.setText("Agregar Nodos");
        NodoBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                NodoBotonMouseReleased(evt);
            }
        });

        ViewerBoton.setText("Mostrar Grafo");
        ViewerBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ViewerBotonMouseReleased(evt);
            }
        });

        AristaBoton.setText("Agregar Arista");
        AristaBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AristaBotonMouseReleased(evt);
            }
        });

        jButton15.setText("Comprobar Grafo Bicoloreable");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton15MouseReleased(evt);
            }
        });

        BicoloreableTf.setEditable(false);
        BicoloreableTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BicoloreableTfActionPerformed(evt);
            }
        });

        Listnodo.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(Listnodo);

        Listnodo2.setModel(new DefaultListModel());
        jScrollPane7.setViewportView(Listnodo2);

        javax.swing.GroupLayout BicoloreableLayout = new javax.swing.GroupLayout(Bicoloreable);
        Bicoloreable.setLayout(BicoloreableLayout);
        BicoloreableLayout.setHorizontalGroup(
            BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BicoloreableLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(NodoBoton, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addComponent(AristaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ViewerBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(NombreId, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BicoloreableLayout.createSequentialGroup()
                .addGap(0, 130, Short.MAX_VALUE)
                .addGroup(BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BicoloreableLayout.createSequentialGroup()
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BicoloreableLayout.createSequentialGroup()
                        .addComponent(BicoloreableTf, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BicoloreableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(209, 209, 209))
        );

        BicoloreableLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AristaBoton, NodoBoton, ViewerBoton});

        BicoloreableLayout.setVerticalGroup(
            BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BicoloreableLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BicoloreableLayout.createSequentialGroup()
                        .addComponent(NodoBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NombreId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AristaBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ViewerBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jButton15)
                        .addGap(18, 18, 18)
                        .addComponent(BicoloreableTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(BicoloreableLayout.createSequentialGroup()
                        .addGroup(BicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        Main.add(Bicoloreable, "Bicoloreable");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Árbol de Expansión Mínima");

        NodoBoton1.setText("Agregar Nodos");
        NodoBoton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                NodoBoton1MouseReleased(evt);
            }
        });
        NodoBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NodoBoton1ActionPerformed(evt);
            }
        });

        ViewerBoton1.setText("Mostrar Grafo");
        ViewerBoton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ViewerBoton1MouseReleased(evt);
            }
        });

        AristaBoton1.setText("Agregar Arista");
        AristaBoton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AristaBoton1MouseReleased(evt);
            }
        });
        AristaBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AristaBoton1ActionPerformed(evt);
            }
        });

        jButton16.setText("Crear Arbol de Expansion Miinima");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton16MouseReleased(evt);
            }
        });

        Listnodo1.setModel(new DefaultListModel());
        jScrollPane8.setViewportView(Listnodo1);

        Listnodo3.setModel(new DefaultListModel());
        jScrollPane9.setViewportView(Listnodo3);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout ArbolLayout = new javax.swing.GroupLayout(Arbol);
        Arbol.setLayout(ArbolLayout);
        ArbolLayout.setHorizontalGroup(
            ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArbolLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(ArbolLayout.createSequentialGroup()
                        .addGroup(ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ViewerBoton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NombreId1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NodoBoton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ArbolLayout.createSequentialGroup()
                                    .addComponent(AristaBoton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton16))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        ArbolLayout.setVerticalGroup(
            ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArbolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(23, 23, 23)
                .addGroup(ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ArbolLayout.createSequentialGroup()
                        .addComponent(NodoBoton1)
                        .addGap(18, 18, 18)
                        .addComponent(NombreId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(ArbolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AristaBoton1)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ViewerBoton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton16))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        Main.add(Arbol, "Arbol");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("Floyd");

        NodoBoton3.setText("Agregar Nodos");
        NodoBoton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                NodoBoton3MouseReleased(evt);
            }
        });
        NodoBoton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NodoBoton3ActionPerformed(evt);
            }
        });

        AristaBoton3.setText("Agregar Arista");
        AristaBoton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AristaBoton3MouseReleased(evt);
            }
        });
        AristaBoton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AristaBoton3ActionPerformed(evt);
            }
        });

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        ViewerBoton3.setText("Mostrar Grafo");
        ViewerBoton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ViewerBoton3MouseReleased(evt);
            }
        });

        jButton13.setText("Encontrar Todos los Destinos");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton13MouseReleased(evt);
            }
        });

        NodeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane15.setViewportView(NodeTable);

        Listnodo6.setModel(new DefaultListModel());
        jScrollPane13.setViewportView(Listnodo6);

        Listnodo7.setModel(new DefaultListModel());
        jScrollPane14.setViewportView(Listnodo7);

        jLabel13.setText("Origen");

        jLabel14.setText("Destino");

        NodeTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane16.setViewportView(NodeTable1);

        javax.swing.GroupLayout OrigenesLayout = new javax.swing.GroupLayout(Origenes);
        Origenes.setLayout(OrigenesLayout);
        OrigenesLayout.setHorizontalGroup(
            OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenesLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(140, 140, 140)
                .addComponent(jLabel14)
                .addGap(63, 63, 63))
            .addGroup(OrigenesLayout.createSequentialGroup()
                .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(OrigenesLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NodoBoton3, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(NombreId3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(OrigenesLayout.createSequentialGroup()
                                    .addComponent(AristaBoton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(ViewerBoton3, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrigenesLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        OrigenesLayout.setVerticalGroup(
            OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrigenesLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrigenesLayout.createSequentialGroup()
                        .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(OrigenesLayout.createSequentialGroup()
                        .addComponent(NodoBoton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NombreId3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AristaBoton3)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ViewerBoton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13))
                    .addComponent(jScrollPane14)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OrigenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        OrigenesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane13, jScrollPane14});

        Main.add(Origenes, "Origenes");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Dijkstra");

        NodoBoton2.setText("Agregar Nodos");
        NodoBoton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                NodoBoton2MouseReleased(evt);
            }
        });
        NodoBoton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NodoBoton2ActionPerformed(evt);
            }
        });

        Listnodo4.setModel(new DefaultListModel());
        jScrollPane10.setViewportView(Listnodo4);

        Listnodo5.setModel(new DefaultListModel());
        jScrollPane11.setViewportView(Listnodo5);

        AristaBoton2.setText("Agregar Arista");
        AristaBoton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AristaBoton2MouseReleased(evt);
            }
        });
        AristaBoton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AristaBoton2ActionPerformed(evt);
            }
        });

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        ViewerBoton2.setText("Mostrar Grafo");
        ViewerBoton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ViewerBoton2MouseReleased(evt);
            }
        });

        jLabel11.setText("Origen");

        jLabel12.setText("Destino");

        jButton12.setText("Encontrar Todos los Destinos");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton12MouseReleased(evt);
            }
        });

        ListaDijkstra.setModel(new DefaultListModel());
        jScrollPane12.setViewportView(ListaDijkstra);

        javax.swing.GroupLayout OrigenLayout = new javax.swing.GroupLayout(Origen);
        Origen.setLayout(OrigenLayout);
        OrigenLayout.setHorizontalGroup(
            OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrigenLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrigenLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(121, 121, 121)
                        .addComponent(jLabel12)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrigenLayout.createSequentialGroup()
                        .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(OrigenLayout.createSequentialGroup()
                                .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton12)
                                    .addComponent(NodoBoton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(NombreId2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(OrigenLayout.createSequentialGroup()
                                            .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(AristaBoton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OrigenLayout.createSequentialGroup()
                                                    .addGap(70, 70, 70)
                                                    .addComponent(jLabel9)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(ViewerBoton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Kentucky, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
        );

        OrigenLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {NodoBoton2, NombreId2, ViewerBoton2, jButton12});

        OrigenLayout.setVerticalGroup(
            OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrigenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrigenLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(OrigenLayout.createSequentialGroup()
                                .addComponent(NodoBoton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NombreId2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(OrigenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(AristaBoton2)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ViewerBoton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Kentucky, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(OrigenLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        OrigenLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane10, jScrollPane11});

        Main.add(Origen, "Origen");

        jButton1.setText("Laberinto Backtracking");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Evaluación por Desempeño");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Expresiones Matemáticas ");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton3.setVerifyInputWhenFocusTarget(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Compresión de Archivos");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setVerifyInputWhenFocusTarget(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Grafo Bi-Coloreable");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.setVerifyInputWhenFocusTarget(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Orígenes/Todos los Destinos");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.setVerifyInputWhenFocusTarget(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText(" Menor Costo:");

        jButton7.setText("Origen/Todos los Destinos");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton7.setVerifyInputWhenFocusTarget(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton7MouseReleased(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Árboles de Expansión Mínima");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton8.setVerifyInputWhenFocusTarget(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3, jButton4, jButton5, jButton6, jButton7, jButton8});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Laberinto");
        laberintotext.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Compresiones");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Bicoloreable");
        Listnodo.setModel(new DefaultListModel());
        Listnodo2.setModel(new DefaultListModel());
        grafo.clear();
        grafo.addAttribute("ui.stylesheet", "node{size:50px; text-alignment:above; fill-mode: image-scaled; fill-image: url('.\\kn.png');} node.red { fill-mode: image-scaled; fill-image: url('.\\kr.png');} node.blue{fill-mode: image-scaled; fill-image: url('.\\kb.png');}");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Origenes");
        grafo.clear();
        Listnodo6.setModel(new DefaultListModel());
        Listnodo7.setModel(new DefaultListModel());
        grafo.addAttribute("ui.stylesheet", "edge{text-alignment:above;} node{size:50px; text-alignment:above; fill-mode: image-scaled; fill-image: url('.\\kw.png');}");
        NodeTable.setModel(new DefaultTableModel());
        NodeTable1.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Origen");
        grafo.clear();
        Listnodo4.setModel(new DefaultListModel());
        Listnodo5.setModel(new DefaultListModel());
        Kentucky.setModel(new DefaultComboBoxModel());
        grafo.addAttribute("ui.stylesheet", "edge{text-alignment:above;} node{size:50px; text-alignment:above; fill-mode: image-scaled; fill-image: url('.\\kp.png');}");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Arbol");
        Listnodo1.setModel(new DefaultListModel());
        Listnodo3.setModel(new DefaultListModel());
        grafo.clear();
        arbol.clear();
        grafo.addAttribute("ui.stylesheet", "edge{text-alignment:above;} node{size:50px; text-alignment:above; fill-mode: image-scaled; fill-image: url('.\\ka.png');}");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Evaluacion");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "Expresiones");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseReleased
        JFileChooser fc = new JFileChooser("./");
        fc.setDialogTitle("Seleccione un archivo con el laberinto.");
        FileNameExtensionFilter fe = new FileNameExtensionFilter("Archivo de texto. (.txt)", "txt");
        fc.setFileFilter(fe);
        fc.showOpenDialog(null);
        f = fc.getSelectedFile();
        if (f != null) {
            int x = 0;
            int y = 0;
            try {
                Scanner texto = new Scanner(f);
                while (texto.hasNext()) {
                    y++;
                    x = texto.nextLine().length();
                }
                texto.close();
                laberinto = new char[y][x];
                Scanner texto2 = new Scanner(f);
                for (int i = 0; i < y; i++) {
                    String linea = texto2.next();
                    for (int j = 0; j < x; j++) {
                        laberinto[i][j] = linea.charAt(j);
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProyectoEdD1.class.getName()).log(Level.SEVERE, null, ex);
            }
            laberintotext.setText(printMatriz(laberinto));
        }
    }//GEN-LAST:event_jButton9MouseReleased

    private void TFrespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFrespuestaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFrespuestaActionPerformed

    private void ceroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceroActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "0");
    }//GEN-LAST:event_ceroActionPerformed

    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "3");
    }//GEN-LAST:event_tresActionPerformed

    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "4");
    }//GEN-LAST:event_cuatroActionPerformed

    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sieteActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "7");
    }//GEN-LAST:event_sieteActionPerformed

    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ochoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "8");
    }//GEN-LAST:event_ochoActionPerformed

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "5");
    }//GEN-LAST:event_cincoActionPerformed

    private void dosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "2");
    }//GEN-LAST:event_dosActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + ".");
    }//GEN-LAST:event_decimalActionPerformed

    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nueveActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "9");
    }//GEN-LAST:event_nueveActionPerformed

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "6");
    }//GEN-LAST:event_seisActionPerformed

    private void unoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "1");
    }//GEN-LAST:event_unoActionPerformed

    private void dividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dividirActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "/");
    }//GEN-LAST:event_dividirActionPerformed

    private void multiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicarActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "*");
    }//GEN-LAST:event_multiplicarActionPerformed

    private void masActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "+");
    }//GEN-LAST:event_masActionPerformed

    private void menosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menosActionPerformed
        // TODO add your handling code here:
        TFrespuesta.setText(TFrespuesta.getText() + "-");
    }//GEN-LAST:event_menosActionPerformed

    private void DELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELActionPerformed
        // TODO add your handling code here:
        if (TFrespuesta.getText().length() != 0) {
            TFrespuesta.setText(TFrespuesta.getText().substring(0, TFrespuesta.getText().length() - 1));
        }
    }//GEN-LAST:event_DELActionPerformed

    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        String problema = TFrespuesta.getText() + " ";
        if (TFrespuesta.getText().length() == 0) {

        } else {
            Arraylist numeros = new Arraylist();
            Arraylist operadores = new Arraylist();

            for (int i = 0; i < problema.length(); i++) {
                if (Character.getNumericValue(problema.charAt(i)) < 10 && Character.getNumericValue(problema.charAt(i)) >= 0) {
                    String num = "" + problema.charAt(i);
                    if (i + 1 != problema.length()) {

                        while (Character.getNumericValue(problema.charAt(i + 1)) < 10 && Character.getNumericValue(problema.charAt(i + 1)) >= 0) {
                            num += problema.charAt(i + 1);
                            i++;
                        }

                    }
                    numeros.append(Double.parseDouble(num));

                } else if (problema.charAt(i) == '*' || problema.charAt(i) == '/' || problema.charAt(i) == '+' || problema.charAt(i) == '-') {
                    operadores.append(problema.charAt(i));

                } else {
                    i = problema.length();
                }
            }

            for (int i = 0; i < numeros.getAvailpos(); i++) {
                if (operadores.get(i) == (Object) '*') {
                    numeros.set(i, ((double) numeros.get(i) * (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }

                if (operadores.get(i) == (Object) '/') {
                    numeros.set(i, ((double) numeros.get(i) / (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }
            }

            for (int i = 0; i < numeros.getAvailpos(); i++) {
                if (operadores.get(i) == (Object) '+') {
                    numeros.set(i, ((double) numeros.get(i) + (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }

                if (operadores.get(i) == (Object) '-') {
                    numeros.set(i, ((double) numeros.get(i) - (double) numeros.get(i + 1)));
                    operadores.delete(i);
                    numeros.delete(i + 1);
                    i = -1;
                }
            }
            TFrespuesta.setText("" + numeros.get(0));
            if (TFrespuesta.getText().equals("null")) {
                TFrespuesta.setText("Math Error");
            }
        }
    }//GEN-LAST:event_igualActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (f != null) {
            int[] coordenadas = entrada(laberinto);
            laberinto[coordenadas[0]][coordenadas[1]] = '+';
            LinkedStack backtracking = salida(laberinto, coordenadas[0], coordenadas[1]);
            while (!backtracking.isEmpty()) {
                Laberinto maze = (Laberinto) backtracking.pop();
                laberinto[maze.getX()][maze.getY()] = '#';
            }
            laberintotext.setText(printMatriz(laberinto));
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void empresa_jefeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empresa_jefeMouseReleased
        // TODO add your handling code here:
        if (nombre_jefe.getText().equals("")) {

        } else {
            Empresa.setModel(new DefaultTreeModel(new DefaultMutableTreeNode(new Empleado(nombre_jefe.getText()))));
            empresa_empleado.setEnabled(true);
            nombre_empleado.setEnabled(true);
            empresa_jefe.setText("Cambiar Jefe");
            raiz2 = new Treenode(new Empleado(nombre_jefe.getText()));
        }
    }//GEN-LAST:event_empresa_jefeMouseReleased

    private void empresa_empleadoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empresa_empleadoMouseReleased
        // TODO add your handling code here:
        if (Empresa.getLastSelectedPathComponent() == null) {
        } else {
            DefaultTreeModel m = (DefaultTreeModel) Empresa.getModel();
            DefaultMutableTreeNode n = (DefaultMutableTreeNode) m.getRoot();
            Empleado temp = new Empleado(nombre_empleado.getText());
            Empleado seleccion = (Empleado) ((DefaultMutableTreeNode) Empresa.getLastSelectedPathComponent()).getUserObject();
            Treenode nodo = rec(raiz2, seleccion);
            nodo.AddChild(new Treenode(temp));

            n.removeAllChildren();
            llenar(raiz2, n);
            Empresa.setModel(m);
            m.reload((javax.swing.tree.TreeNode) m.getRoot());
        }
    }//GEN-LAST:event_empresa_empleadoMouseReleased

    private void comprimirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comprimirMouseReleased
        if (!textarea.getText().isEmpty()) {
            textarea2.setText(compression(textarea.getText()));
        }
    }//GEN-LAST:event_comprimirMouseReleased

    private void descomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descomprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descomprimirActionPerformed

    private void descomprimirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descomprimirMouseReleased
        textarea3.setText(decompression(textarea2.getText()));
    }//GEN-LAST:event_descomprimirMouseReleased

    private void cargararchivoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargararchivoMouseReleased
        JFileChooser fc = new JFileChooser("./");
        fc.setDialogTitle("Seleccione un archivo a cargar.");
        FileNameExtensionFilter fe = new FileNameExtensionFilter("Archivo de texto. (.txt)", "txt");
        fc.setFileFilter(fe);
        fc.showOpenDialog(null);
        f = fc.getSelectedFile();
        if (f.isFile()) {
            try {
                Scanner file = new Scanner(f);
                String texto = "";
                while (file.hasNext()) {
                    texto += file.nextLine() + '\n';
                }
                textarea.setText(texto);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ProyectoEdD1.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_cargararchivoMouseReleased

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        posterior(raiz2);
        Empresa.setModel(new DefaultTreeModel(new DefaultMutableTreeNode(raiz2.getData())));
        DefaultTreeModel m = (DefaultTreeModel) Empresa.getModel();
        DefaultMutableTreeNode n = (DefaultMutableTreeNode) m.getRoot();
        n.removeAllChildren();
        llenar(raiz2, n);
        Empresa.setModel(m);
        m.reload((javax.swing.tree.TreeNode) m.getRoot());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void NodoBotonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NodoBotonMouseReleased
        // TODO add your handling code here:

        if (!NombreId.getText().isEmpty()) {
            boolean repetido = true;
            for (org.graphstream.graph.Node node : grafo) {
                if (node.getId().equals(NombreId.getText())) {
                    repetido = false;
                }
            }
            if (repetido) {
                String text = NombreId.getText();
                grafo.addNode(text);
                grafo.getNode(text).addAttribute("ui.label", grafo.getNode(text).getId());
                DefaultListModel lista = (DefaultListModel) Listnodo.getModel();
                lista.addElement(text);
                Listnodo.setModel(lista);
                Listnodo2.setModel(lista);
                NombreId.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Un nodo en el grafo ya usa ese Id.");
                NombreId.setText("");
            }
        }
    }//GEN-LAST:event_NodoBotonMouseReleased

    private void ViewerBotonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewerBotonMouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0) {
            Viewer viewer = grafo.display();
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
        }
    }//GEN-LAST:event_ViewerBotonMouseReleased

    private void BicoloreableTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BicoloreableTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BicoloreableTfActionPerformed

    private void AristaBotonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AristaBotonMouseReleased
        // TODO add your handling code here
        if (Listnodo.getSelectedValue() != null && Listnodo2.getSelectedValue() != null) {
            boolean entrar = true;
            for (Edge edge : grafo.getEdgeSet()) {
                if (edge.getId().equals(Listnodo2.getSelectedValue() + Listnodo.getSelectedValue()) || edge.getId().equals(Listnodo.getSelectedValue() + Listnodo2.getSelectedValue())) {
                    entrar = false;
                }
            }
            if (!Listnodo.getSelectedValue().equals(Listnodo2.getSelectedValue()) && entrar) {
                String id1 = Listnodo.getSelectedValue();
                String id2 = Listnodo2.getSelectedValue();
                grafo.addEdge(id1 + id2, id1, id2);
                JOptionPane.showMessageDialog(this, "Arista entre " + id1 + " y " + id2 + " creada exitosamente!");
            }
        }
    }//GEN-LAST:event_AristaBotonMouseReleased

    private void jButton15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0) {
            for (org.graphstream.graph.Node nodo : grafo) {
                nodo.setAttribute("No visitado", true);
                nodo.setAttribute("Color", "Ninguno");
            }
            if (bicoloreable(grafo.getNode(0), true, "Azul")) {
                BicoloreableTf.setText("El Grafo es Bicoloreable");
            } else {
                BicoloreableTf.setText("El Grafo no es Bicoloreable");
            }
        }
    }//GEN-LAST:event_jButton15MouseReleased

    private void NodoBoton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NodoBoton1MouseReleased
        if (!NombreId1.getText().isEmpty()) {
            boolean repetido = true;
            for (org.graphstream.graph.Node node : grafo) {
                if (node.getId().equals(NombreId1.getText())) {
                    repetido = false;
                }
            }
            if (repetido) {
                String text = NombreId1.getText();
                grafo.addNode(text);
                grafo.getNode(text).addAttribute("ui.label", grafo.getNode(text).getId());
                DefaultListModel lista = (DefaultListModel) Listnodo1.getModel();
                lista.addElement(text);
                Listnodo1.setModel(lista);
                Listnodo3.setModel(lista);
                NombreId1.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Un nodo en el grafo ya usa ese Id.");
                NombreId1.setText("");
            }
        }
    }//GEN-LAST:event_NodoBoton1MouseReleased

    private void ViewerBoton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewerBoton1MouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0) {
            Viewer viewer = grafo.display();
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
        }
    }//GEN-LAST:event_ViewerBoton1MouseReleased

    private void AristaBoton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AristaBoton1MouseReleased
        if (Listnodo1.getSelectedValue() != null && Listnodo3.getSelectedValue() != null) {
            boolean entrar = true;
            for (Edge edge : grafo.getEdgeSet()) {
                if (edge.getId().equals(Listnodo3.getSelectedValue() + Listnodo1.getSelectedValue()) || edge.getId().equals(Listnodo1.getSelectedValue() + Listnodo3.getSelectedValue())) {
                    entrar = false;
                }
            }
            if (!Listnodo1.getSelectedValue().equals(Listnodo3.getSelectedValue()) && entrar) {
                String id1 = Listnodo1.getSelectedValue();
                String id2 = Listnodo3.getSelectedValue();
                grafo.addEdge(id1 + id2, id1, id2);
                grafo.getEdge(id1 + id2).addAttribute("Peso", jSpinner1.getValue());
                grafo.getEdge(id1 + id2).addAttribute("ui.label", grafo.getEdge(id1 + id2).getAttribute("Peso") + "");
                JOptionPane.showMessageDialog(this, "Arista entre " + id1 + " y " + id2 + " con un peso de " + jSpinner1.getValue() + " creada exitosamente!");
                jSpinner1.setValue(1);
            }
        }
    }//GEN-LAST:event_AristaBoton1MouseReleased

    private void jButton16MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseReleased
        arbol.clear();
        arbol.addAttribute("ui.stylesheet", "edge{text-alignment:above;} node{size:50px; text-alignment:above; fill-mode: image-scaled; fill-image: url('.\\kv.png');}");
        ArrayList<Arista> aristas = new ArrayList<>();
        for (org.graphstream.graph.Node node : grafo) {
            arbol.addNode(node.getId());
            arbol.getNode(node.getIndex()).setAttribute("ui.label", node.getId());
            arbol.getNode(node.getIndex()).setAttribute("No visitado", true);
        }
        for (Edge edge : grafo.getEachEdge()) {
            aristas.add(new Arista(edge.getId(), edge.getAttribute("Peso")));
        }
        Collections.sort(aristas, Arista.Comparador);
        for (Arista arista : aristas) {
            if (ciclo(true, arbol.getNode(grafo.getEdge(arista.id).getNode0().getId()), arbol.getNode(grafo.getEdge(arista.id).getNode1().getId()))) {
                arbol.addEdge(arista.id, arbol.getNode(grafo.getEdge(arista.id).getNode0().getId()).getId(), arbol.getNode(grafo.getEdge(arista.id).getNode1().getId()).getId());
            }
            for (org.graphstream.graph.Node node : arbol) {
                arbol.getNode(node.getIndex()).setAttribute("No visitado", true);
            }
        }
        for (Edge edge : arbol.getEachEdge()) {
            edge.setAttribute("ui.label", grafo.getEdge(edge.getId()).getAttribute("Peso") + "");
        }
        Viewer viewer = arbol.display();
        viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
    }//GEN-LAST:event_jButton16MouseReleased

    private void AristaBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AristaBoton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AristaBoton1ActionPerformed

    private void NodoBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NodoBoton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NodoBoton1ActionPerformed

    private void NodoBoton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NodoBoton2MouseReleased
        // TODO add your handling code here:
        if (!NombreId2.getText().isEmpty()) {
            boolean repetido = true;
            for (org.graphstream.graph.Node node : grafo) {
                if (node.getId().equals(NombreId2.getText())) {
                    repetido = false;
                }
            }
            if (repetido) {

                String text = NombreId2.getText();
                grafo.addNode(text);
                grafo.getNode(text).addAttribute("ui.label", grafo.getNode(text).getId());
                DefaultComboBoxModel box = (DefaultComboBoxModel) Kentucky.getModel();
                DefaultListModel lista = (DefaultListModel) Listnodo4.getModel();
                lista.addElement(text);
                box.addElement(text);
                Listnodo4.setModel(lista);
                Listnodo5.setModel(lista);
                NombreId2.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Un nodo en el grafo ya usa ese Id.");
                NombreId1.setText("");
            }
        }
    }//GEN-LAST:event_NodoBoton2MouseReleased

    private void NodoBoton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NodoBoton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NodoBoton2ActionPerformed

    private void AristaBoton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AristaBoton2MouseReleased
        // TODO add your handling code here:
        if (Listnodo4.getSelectedValue() != null && Listnodo5.getSelectedValue() != null) {
            boolean entrar = true;
            for (Edge edge : grafo.getEdgeSet()) {
                if (edge.getId().equals(Listnodo5.getSelectedValue() + Listnodo4.getSelectedValue()) || edge.getId().equals(Listnodo4.getSelectedValue() + Listnodo5.getSelectedValue())) {
                    entrar = false;
                }
            }
            if (!Listnodo4.getSelectedValue().equals(Listnodo5.getSelectedValue()) && entrar) {
                String id1 = Listnodo4.getSelectedValue();
                String id2 = Listnodo5.getSelectedValue();
                grafo.addEdge(id1 + id2, id1, id2, true);
                grafo.getEdge(id1 + id2).addAttribute("Peso", jSpinner2.getValue());
                grafo.getEdge(id1 + id2).addAttribute("ui.label", grafo.getEdge(id1 + id2).getAttribute("Peso") + "");
                JOptionPane.showMessageDialog(this, "Arista entre " + id1 + " y " + id2 + " con un peso de " + jSpinner2.getValue() + " creada exitosamente!");
                jSpinner2.setValue(1);
            }
        }
    }//GEN-LAST:event_AristaBoton2MouseReleased

    private void AristaBoton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AristaBoton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AristaBoton2ActionPerformed

    private void ViewerBoton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewerBoton2MouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0) {
            Viewer viewer = grafo.display();
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
        }
    }//GEN-LAST:event_ViewerBoton2MouseReleased

    private void jButton7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7MouseReleased

    private void jButton12MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseReleased
        // TODO add your handling code here:

        grafo.addAttribute("Distancia", 0);
        Dijkstra(grafo.getNode(Kentucky.getSelectedItem() + ""));
        ListaDijkstra.setModel(new DefaultListModel());
        DefaultListModel modelo = (DefaultListModel) ListaDijkstra.getModel();
        for (org.graphstream.graph.Node node : grafo) {
//            System.out.println("a - " + node.getId() + " = " + node.getAttribute("Distancia"));
            String cadena = "";
            org.graphstream.graph.Node temp = node.getAttribute("Previo");
            if (temp != null) {
                cadena += temp.getId() + " - " + node.getId();
                temp = temp.getAttribute("Previo");
                while (temp != null) {
                    cadena = temp.getId() + " - " + cadena;
                    temp = temp.getAttribute("Previo");
                }
            }
            cadena += "  Distancia: " + node.getAttribute("Distancia");
            cadena = "Recorrido de " + Kentucky.getSelectedItem() + " a " + node.getId() + ": " + cadena;
            modelo.addElement(cadena);
        }
        ListaDijkstra.setModel(modelo);
    }//GEN-LAST:event_jButton12MouseReleased

    private void NodoBoton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NodoBoton3MouseReleased
        // TODO add your handling code here:
        if (!NombreId3.getText().isEmpty()) {
            boolean repetido = true;
            for (org.graphstream.graph.Node node : grafo) {
                if (node.getId().equals(NombreId3.getText())) {
                    repetido = false;
                }
            }
            if (repetido) {

                String text = NombreId3.getText();
                grafo.addNode(text);
                grafo.getNode(text).addAttribute("ui.label", grafo.getNode(text).getId());
                DefaultListModel lista = (DefaultListModel) Listnodo6.getModel();
                lista.addElement(text);
                Listnodo6.setModel(lista);
                Listnodo7.setModel(lista);
                NombreId3.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Un nodo en el grafo ya usa ese Id.");
                NombreId3.setText("");
            }
        }
    }//GEN-LAST:event_NodoBoton3MouseReleased

    private void NodoBoton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NodoBoton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NodoBoton3ActionPerformed

    private void AristaBoton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AristaBoton3MouseReleased
        // TODO add your handling code here:
        if (Listnodo6.getSelectedValue() != null && Listnodo7.getSelectedValue() != null) {
            boolean entrar = true;
            for (Edge edge : grafo.getEdgeSet()) {
                if (edge.getId().equals(Listnodo6.getSelectedValue() + Listnodo7.getSelectedValue()) || edge.getId().equals(Listnodo7.getSelectedValue() + Listnodo6.getSelectedValue())) {
                    entrar = false;
                }
            }
            if (!Listnodo6.getSelectedValue().equals(Listnodo5.getSelectedValue()) && entrar) {
                String id1 = Listnodo6.getSelectedValue();
                String id2 = Listnodo7.getSelectedValue();
                grafo.addEdge(id1 + id2, id1, id2, true);
                grafo.getEdge(id1 + id2).addAttribute("Peso", jSpinner3.getValue());
                grafo.getEdge(id1 + id2).addAttribute("ui.label", grafo.getEdge(id1 + id2).getAttribute("Peso") + "");
                JOptionPane.showMessageDialog(this, "Arista entre " + id1 + " y " + id2 + " con un peso de " + jSpinner3.getValue() + " creada exitosamente!");
                jSpinner2.setValue(1);
            }
        }
    }//GEN-LAST:event_AristaBoton3MouseReleased

    private void AristaBoton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AristaBoton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AristaBoton3ActionPerformed

    private void ViewerBoton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewerBoton3MouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0) {
            Viewer viewer = grafo.display();
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
        }
    }//GEN-LAST:event_ViewerBoton3MouseReleased

    private void jButton13MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseReleased
        // TODO add your handling code here:
        if (grafo.getNodeCount() > 0 && grafo.getEdgeCount() > 0) {
            Floyd();
        }
    }//GEN-LAST:event_jButton13MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoEdD1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProyectoEdD1().setVisible(true);
            }
        });
    }

    public void Floyd() {
        ArrayList arreglos = new ArrayList<>();
        int[][] costo = new int[grafo.getNodeCount()][grafo.getNodeCount()];
        String[][] ruta = new String[grafo.getNodeCount()][grafo.getNodeCount()];
        for (int i = 0; i < grafo.getNodeCount(); i++) {
            for (int j = 0; j < grafo.getNodeCount(); j++) {
                if (i == j) {
                    costo[i][j] = 0;
                } else if (grafo.getNode(i).hasEdgeBetween(j)) {
                    costo[i][j] = grafo.getNode(i).getEdgeBetween(j).getAttribute("Peso");
                } else {
                    costo[i][j] = 30000000;
                }
                ruta[i][j] = grafo.getNode(i).getId();
            }
        }
        for (int k = 0; k < grafo.getNodeCount(); k++) {
            for (int i = 0; i < grafo.getNodeCount(); i++) {
                for (int j = 0; j < grafo.getNodeCount(); j++) {
                    if (costo[i][k] + costo[k][j] < costo[i][j]) {
                        ruta[i][j] = ruta[k][j];
                        costo[i][j] = costo[i][k] + costo[k][j];
                    }
                }
            }
        }
        NodeTable.setModel(new DefaultTableModel());
        DefaultTableModel model = (DefaultTableModel) NodeTable.getModel();
        int n = costo.length;
        for (int i = -1; i < n; i++) {
            if (i == -1) {
                model.addColumn(" ");
            } else {
                model.addColumn(grafo.getNode(i).getId());
            }
        }
        for (int i = 0; i < n; i++) {
            Object[] temp = new Object[n + 1];
            temp[0] = grafo.getNode(i).getId();
            for (int j = 0; j < n; j++) {
                temp[j + 1] = costo[i][j];
            }
            model.addRow(temp);
        }
        NodeTable1.setModel(model);
        NodeTable1.setModel(new DefaultTableModel());
        model = (DefaultTableModel) NodeTable1.getModel();
        n = costo.length;
        for (int i = -1; i < n; i++) {
            if (i == -1) {
                model.addColumn(" ");
            } else {
                model.addColumn(grafo.getNode(i).getId());
            }
        }
        for (int i = 0; i < n; i++) {
            Object[] temp = new Object[n + 1];
            temp[0] = grafo.getNode(i).getId();
            for (int j = 0; j < n; j++) {
                temp[j + 1] = ruta[i][j];
            }
            model.addRow(temp);
        }
        NodeTable1.setModel(model);
    }

    public void Dijkstra(org.graphstream.graph.Node source) {
        ArrayList<org.graphstream.graph.Node> no = new ArrayList();
        org.graphstream.graph.Node NULL = null;

        for (org.graphstream.graph.Node node : grafo) {
            node.setAttribute("Distancia", Integer.MAX_VALUE);
            node.addAttribute("Previo", NULL);
            no.add(node);
        }

        source.setAttribute("Distancia", 0);

        while (!no.isEmpty()) {
            org.graphstream.graph.Node nodomenordistancia = corto(no);
            no.remove(nodomenordistancia);

            for (Edge edge : nodomenordistancia) {
                if (edge.getSourceNode() == nodomenordistancia && no.contains(edge.getOpposite(nodomenordistancia))) {
                    int distanciatemp = (int) nodomenordistancia.getAttribute("Distancia") + (int) edge.getAttribute("Peso");
                    if (distanciatemp < (int) edge.getOpposite(nodomenordistancia).getAttribute("Distancia")) {
                        edge.getOpposite(nodomenordistancia).setAttribute("Distancia", distanciatemp);
                        edge.getOpposite(nodomenordistancia).setAttribute("Previo", nodomenordistancia);
                    }

                }
            }
        }

    }

    public static org.graphstream.graph.Node corto(ArrayList<org.graphstream.graph.Node> no) {
        int menor = Integer.MAX_VALUE;
        org.graphstream.graph.Node menornodo = null;
        for (org.graphstream.graph.Node node : no) {
            if (menor > (int) node.getAttribute("Distancia")) {
                menor = node.getAttribute("Distancia");
                menornodo = node;
            }
        }
        return menornodo;
    }

    public boolean ciclo(boolean conecta, org.graphstream.graph.Node a, org.graphstream.graph.Node b) {
        b.setAttribute("No visitado", false);
        for (Edge edge : b) {
            if (a == b || a == edge.getOpposite(b)) {
                conecta = false;
            } else {
                if (edge.getOpposite(b).getAttribute("No visitado")) {
                    conecta = ciclo(conecta, a, edge.getOpposite(b));
                }
            }
        }
        return conecta;
    }

    public static boolean bicoloreable(org.graphstream.graph.Node nodo, boolean bicolor, String color) {
        if (nodo.getAttribute("No visitado")) {
            nodo.setAttribute("No visitado", false);
            if (nodo.getAttribute("Color").equals("Ninguno")) {
                nodo.setAttribute("Color", color);
            }
            for (Edge edge : nodo) {
                if (edge.getOpposite(nodo).getAttribute("Color").equals(nodo.getAttribute("Color"))) {
                    bicolor = false;
                }
                if (color.equals("Azul")) {
                    bicolor = bicoloreable(edge.getOpposite(nodo), bicolor, "Rojo");
                    nodo.setAttribute("ui.class", "blue");

                } else {
                    bicolor = bicoloreable(edge.getOpposite(nodo), bicolor, "Azul");
                    nodo.setAttribute("ui.class", "red");

                }
            }
        }
        return bicolor;
    }

    public static int[] entrada(char[][] matriz) {
        int[] coordenadas = new int[2];
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[i].length; j++) {
                if (i == 0) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                } else if (i > 0 && i < matriz.length) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                } else if (i == matriz.length) {
                    if (matriz[i][j] == '0') {
                        coordenadas[0] = i;
                        coordenadas[1] = j;
                        return coordenadas;
                    }

                }
            }
        }
        return coordenadas;
    }

    public static String printMatriz(char[][] laberinto) {
        String string = "";
        for (int i = 0; i < laberinto.length; i++) {
            for (int j = 0; j < laberinto[1].length; j++) {
//                if (laberinto[i][j]=='+') {
//                    laberinto[i][j]='0';
//                }
                string += " [" + laberinto[i][j] + "] ";
            }
            string += "\n";
        }
        return string;
    }

    public static LinkedStack salida(char[][] laberinto, int x, int y) {
        int size1 = laberinto.length;
        int size2 = laberinto[0].length;
        boolean salio = false;
        int cont = 0;
        LinkedStack stack = new LinkedStack();
        stack.push(new Laberinto(x, y));
        while (!salio) {
            cont = 0;
            printMatriz(laberinto);
            //ARRIBA
            if (x > 0 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX() - 1][((Laberinto) stack.top()).getY()] == '0' && !salio) {
                    x--;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //DERECHA
            if (y + 1 < size2 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX()][((Laberinto) stack.top()).getY() + 1] == '0' && !salio) {
                    y++;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //ABAJO
            if (x + 1 < size1 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX() + 1][((Laberinto) stack.top()).getY()] == '0' && !salio) {
                    x++;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            //IZQUIERDA
            if (y > 0 && cont == 0) {
                if (laberinto[((Laberinto) stack.top()).getX()][((Laberinto) stack.top()).getY() - 1] == '0' && !salio) {
                    y--;
                    laberinto[x][y] = '+';
                    stack.push(new Laberinto(x, y));
                    cont++;
                }
            }

            if (cont == 0) {
                laberinto[x][y] = '+';
                stack.pop();
                Laberinto back = (Laberinto) stack.top();
                x = back.getX();
                y = back.getY();
            }

            if (x == size1 - 1 || x == 0 || y == size2 - 1 || y == 0) {
                salio = true;
            }
        }
        return stack;
    }

    public static String compression(String s) {
        String s2 = s;
        ArrayList<Binarynode> nodos = new ArrayList<>();
        while (s2.length() != 0) {
            int frequency = 1;
            for (int i = 1; i < s2.length(); i++) {
                if (s2.charAt(i) == s2.charAt(0)) {
                    frequency++;
                }
            }
            nodos.add(new Binarynode(s2.charAt(0), frequency));
            s2 = s2.replaceAll("" + s2.charAt(0), "");
        }
        Collections.sort(nodos, Binarynode.Comparador);
        while (nodos.size() != 1) {
            Binarynode temp = new Binarynode(null, nodos.get(0).getFrequency() + nodos.get(1).getFrequency());
            temp.AddLeftChild(nodos.get(0));
            temp.AddRightChild(nodos.get(1));
            nodos.add(temp);
            nodos.remove(0);
            nodos.remove(0);
            Collections.sort(nodos, Binarynode.Comparador);
        }
        raiz = nodos.get(0);
        String codigo = "";
        for (int i = 0; i < s.length(); i++) {
            Binarynode temp = rec(raiz, "" + s.charAt(i));
            String string = "";
            while (temp.parent != null) {
                if (temp.parent.lchild == temp) {
                    string += "0";
                } else {
                    string += "1";
                }
                temp = temp.parent;
            }
            for (int j = string.length() - 1; j >= 0; j--) {
                codigo += string.charAt(j);
            }
        }
        return codigo;
    }

    public static Binarynode rec(Binarynode root, String temp) {
        if (("" + root.getChar()).equals(temp)) {
            return root;
        }

        if (root.LeftChild() != null) {
            if (("" + rec(root.LeftChild(), temp).getChar()).equals(temp)) {
                root = rec(root.LeftChild(), temp);
            }
        }
        if (root.RightChild() != null) {
            if (("" + rec(root.RightChild(), temp).getChar()).equals(temp)) {
                root = rec(root.RightChild(), temp);
            }
        }
        return root;
    }

    public static String decompression(String s) {
        String descomprecion = "";
        Binarynode mapa = raiz;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '0') {
                mapa = mapa.lchild;
                if (mapa.getChar() != null) {
                    descomprecion += mapa.getChar();
                    mapa = raiz;
                }
            } else {
                mapa = mapa.rchild;
                if (mapa.getChar() != null) {
                    descomprecion += mapa.getChar();
                    mapa = raiz;
                }
            }
        }
        return descomprecion;
    }

    public static void llenar(Treenode root, DefaultMutableTreeNode node) {
        if (root.LeftChild() != null) {
            node.add(new DefaultMutableTreeNode(root.LeftChild().getData()));
            llenar(root.LeftChild(), node.getFirstLeaf());
        }

        if (root.RightSibling() != null) {
            ((DefaultMutableTreeNode) node.getParent()).add(new DefaultMutableTreeNode(root.RightSibling().getData()));
            llenar(root.RightSibling(), node.getNextSibling());
        }
    }

    public static Treenode rec(Treenode root, Empleado temp) {
        if ((Empleado) root.getData() == temp) {
            return root;
        }

        if (root.LeftChild() != null) {
            if ((Empleado) rec(root.LeftChild(), temp).getData() == temp) {
                root = rec(root.LeftChild(), temp);
            }
        }
        if (root.RightSibling() != null) {
            if ((Empleado) rec(root.RightSibling(), temp).getData() == temp) {
                root = rec(root.RightSibling(), temp);
            }
        }
        return root;
    }

    public static void posterior(Treenode root) {
        if (root.LeftChild() != null) {
            posterior(root.LeftChild());
        }

        if (root.children.isEmpty()) {
            Scanner sc = new Scanner(System.in);
            int nota = Integer.parseInt(JOptionPane.showInputDialog("Que nota le dara a " + ((Empleado) root.getData()).getNombre()));
            ((Empleado) root.getData()).setNota(nota);
        } else {
            float cont = 0;
            for (int i = 0; i < root.children.size(); i++) {
                cont += ((Empleado) ((Treenode) root.children.get(i)).getData()).getNota();
            }
            ((Empleado) root.getData()).setNota(cont / root.children.size());
        }

        if (root.RightSibling() != null) {
            posterior(root.RightSibling());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Arbol;
    private javax.swing.JButton AristaBoton;
    private javax.swing.JButton AristaBoton1;
    private javax.swing.JButton AristaBoton2;
    private javax.swing.JButton AristaBoton3;
    private javax.swing.JPanel Bicoloreable;
    private javax.swing.JTextField BicoloreableTf;
    private javax.swing.JPanel Compresiones;
    private javax.swing.JButton DEL;
    private javax.swing.JTree Empresa;
    private javax.swing.JPanel Evaluacion;
    private javax.swing.JPanel Expresiones;
    private javax.swing.JComboBox<String> Kentucky;
    private javax.swing.JPanel Laberinto;
    private javax.swing.JList<String> ListaDijkstra;
    private javax.swing.JList<String> Listnodo;
    private javax.swing.JList<String> Listnodo1;
    private javax.swing.JList<String> Listnodo2;
    private javax.swing.JList<String> Listnodo3;
    private javax.swing.JList<String> Listnodo4;
    private javax.swing.JList<String> Listnodo5;
    private javax.swing.JList<String> Listnodo6;
    private javax.swing.JList<String> Listnodo7;
    private javax.swing.JPanel Main;
    private javax.swing.JTable NodeTable;
    private javax.swing.JTable NodeTable1;
    private javax.swing.JButton NodoBoton;
    private javax.swing.JButton NodoBoton1;
    private javax.swing.JButton NodoBoton2;
    private javax.swing.JButton NodoBoton3;
    private javax.swing.JTextField NombreId;
    private javax.swing.JTextField NombreId1;
    private javax.swing.JTextField NombreId2;
    private javax.swing.JTextField NombreId3;
    private javax.swing.JPanel Origen;
    private javax.swing.JPanel Origenes;
    private javax.swing.JTextField TFrespuesta;
    private javax.swing.JButton ViewerBoton;
    private javax.swing.JButton ViewerBoton1;
    private javax.swing.JButton ViewerBoton2;
    private javax.swing.JButton ViewerBoton3;
    private javax.swing.JButton cargararchivo;
    private javax.swing.JButton cero;
    private javax.swing.JButton cinco;
    private javax.swing.JButton comprimir;
    private javax.swing.JButton cuatro;
    private javax.swing.JButton decimal;
    private javax.swing.JButton descomprimir;
    private javax.swing.JButton dividir;
    private javax.swing.JButton dos;
    private javax.swing.JButton empresa_empleado;
    private javax.swing.JButton empresa_jefe;
    private javax.swing.JButton igual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextArea laberintotext;
    private javax.swing.JButton mas;
    private javax.swing.JButton menos;
    private javax.swing.JButton multiplicar;
    private javax.swing.JTextField nombre_empleado;
    private javax.swing.JTextField nombre_jefe;
    private javax.swing.JButton nueve;
    private javax.swing.JButton ocho;
    private javax.swing.JButton seis;
    private javax.swing.JButton siete;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextArea textarea2;
    private javax.swing.JTextArea textarea3;
    private javax.swing.JButton tres;
    private javax.swing.JButton uno;
    // End of variables declaration//GEN-END:variables
    File f = null;
    char[][] laberinto = null;
    static Scanner sc = new Scanner(System.in);
    static Binarynode raiz;
    static Treenode raiz2;
    Graph grafo = new SingleGraph("Grafo", false, true);
    Graph arbol = new SingleGraph("Grafo", false, true);
}
